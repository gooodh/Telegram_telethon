import asyncio
from telethon import TelegramClient
from telethon.types import User

from config import api_id, api_hash

# –ó–∞–¥–∞–π —Å–≤–æ–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ SESSION, API_ID, API_HASH
async def main():
    client = TelegramClient('SESSION', api_id, api_hash)
    await client.start()
# async def main():
#     async with TelegramClient('SESSION', api_id, api_hash) as client:
#         if not await client.is_authorized():
#             phone = input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ')
#             await client.send_code_request(phone)
#             code = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥: ')

        #     try:
        #         user = await client.sign_in(phone, code)
        #     except Exception as e:
        #         print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ: {e}')
        #         return

        #     if isinstance(user, User):
        #         print(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}! üòä')
        #     else:
        #         # –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ PasswordToken
        #         password_token = user
        #         import getpass
        #         password = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
        #         try:
        #             user = await client.check_password(password_token, password)
        #             print(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, {user.first_name}! üòä')
        #         except Exception as e:
        #             print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–∞—Ä–æ–ª—è: {e}')


asyncio.run(main())
